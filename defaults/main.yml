---
# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# -------------------
#   System packages
# -------------------

# .. envvar:: drupal_base_packages
#
# List of base packages required by drupal.
drupal_base_packages: []


# .. envvar:: drupal_php5_packages
#
# List of PHP5 packages required by drupal
drupal_php5_packages: [ 'php5-mysql', 'php5-gd', 'php5-json' ]


# .. envvar:: drupal_packages
#
# List of additional packages installed with drupal.
drupal_packages: []


# .. envvar:: drupal_composer_packages
#
# List of additional composer packages installed with drupal.
drupal_composer_packages:
  - name: 'drush/drush'
    release: '7.*'


# ---------------------------
#   Webserver configuration
# ---------------------------

# .. envvar:: drupal_dependencies
#
# Allow the role to manage its own role dependencies.
drupal_dependencies: True


# .. envvar:: drupal_domain
#
# FQDN address of the drupal webpage, configured in ``nginx``.
drupal_domain: [ 'drupal.{{ ansible_domain }}' ]


# .. envvar:: drupal_nginx_auth_realm
#
# Text displayed in the nginx HTTP Auth window when access policy is enabled.
drupal_nginx_auth_realm: 'Drupal access is restricted'


# .. envvar:: drupal_nginx_access_policy
#
# Name of the "nginx access policy" for drupal webpage. See ``debops.nginx``
# Ansible role for more details.
drupal_nginx_access_policy: ''


# .. envvar:: drupal_webserver_user
#
# Name of the webserver user account which will be granted read only access to
# the drupal application directory.
drupal_webserver_user: '{{
  ansible_local.nginx.user
  if (ansible_local|d() and ansible_local.nginx|d() and
  ansible_local.nginx.user|d())
  else "www-data" }}'


# ----------------------------------------
#   Application user, group, directories
# ----------------------------------------

# .. envvar:: drupal_user
#
# Name of the system user account for drupal application.
drupal_user: 'drupal'


# .. envvar:: drupal_group
#
# Name of the system group for drupal application.
drupal_group: 'drupal'


# .. envvar:: drupal_shell
#
# Shell configured on drupal account.
drupal_shell: '/bin/bash'


# .. envvar:: drupal_home
#
# Home directory of the drupal application.
drupal_home: '{{
  (ansible_local.nginx.www
  if (ansible_local|d() and ansible_local.nginx|d() and
  ansible_local.nginx.www|d())
  else "/srv/www") + "/" + drupal_user }}'


# .. envvar:: drupal_install_path
#
# Path where drupal application source will be installed, this directory
# should be readable by the webserver.
drupal_install_path: '{{ drupal_home + "/sites/drupal" }}'


# .. envvar:: drupal_files_path
#
# Path where drupal site public files are stored, including caches.
drupal_files_path: '{{ drupal_install_path + "/sites/default/files" }}'


# .. envvar:: drupal_private_files_path
#
# Path where drupal user-content private files are stored.
# This directory should be set outside of the webserver root directory.
drupal_private_files_path: '{{ drupal_home + "/files/drupal" }}'


# --------------------
#   drupal sources
# --------------------

# .. envvar:: drupal_install_repo
#
# URL of the drupal git repository.
drupal_install_repo: 'http://git.drupal.org/project/drupal.git'


# .. envvar:: drupal_install_version
#
# Name of the git branch to install.
drupal_install_version: '7.39'


# --------------------------
#   Database configuration
# --------------------------

# .. envvar:: drupal_database_server
#
# FQDN address of the MariaDB database host; it will be configured by
# ``debops.mariadb`` role.
drupal_database_server: '{{ ansible_local.mariadb.server }}'


# .. envvar:: drupal_database_user
#
# MariaDB database user to use by drupal.
drupal_database_user: 'drupal'


# .. envvar:: drupal_database_name
#
# Name of the MariaDB database to use by drupal.
drupal_database_name: 'drupal'


# .. envvar:: drupal_database_password
#
# MariaDB database password to drupal account.
drupal_database_password: "{{
  lookup('password', secret + '/mariadb/' +
  ansible_local.mariadb.delegate_to +
  '/credentials/' + drupal_database_user +
  '/password length=48') }}"


# .. envvar:: drupal_cron_path
#
# Drush should take a PATH environment variable to work properly
drupal_cron_path: '{{ drupal_home }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
