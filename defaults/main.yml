---
# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# -------------------
#   System packages
# -------------------

# .. envvar:: drupal_base_packages
#
# List of base packages required by drupal.
drupal_base_packages: []


# .. envvar:: drupal_php5_packages
#
# List of PHP5 packages required by drupal
drupal_php5_packages: [ 'php5-mysql', 'php5-gd', 'php5-json' ]


# .. envvar:: drupal_packages
#
# List of additional packages installed with drupal.
drupal_packages: []


# .. envvar:: drupal_system_packages
#
# List of additional packages installed with drupal.
drupal_system_packages: [ 'drush/drush:7.*' ]


# ---------------------------
#   Webserver configuration
# ---------------------------

# .. envvar:: drupal_dependencies
#
# Allow the role to manage its own role dependencies.
drupal_dependencies: True


# .. envvar:: drupal_domain
#
# FQDN address of the drupal webpage, configured in ``nginx``.
drupal_domain: [ 'drupal.{{ ansible_domain }}' ]


# .. envvar:: drupal_nginx_auth_realm
#
# Text displayed in the nginx HTTP Auth window when access policy is enabled.
drupal_nginx_auth_realm: 'Drupal access is restricted'


# .. envvar:: drupal_nginx_access_policy
#
# Name of the "nginx access policy" for drupal webpage. See ``debops.nginx``
# Ansible role for more details.
drupal_nginx_access_policy: ''


# .. envvar:: drupal_webserver_user
#
# Name of the webserver user account which will be granted read only access to
# the drupal application directory.
drupal_webserver_user: '{{
  ansible_local.nginx.user
  if (ansible_local|d() and ansible_local.nginx|d() and
  ansible_local.nginx.user|d())
  else "www-data" }}'


# ----------------------------------------
#   Application user, group, directories
# ----------------------------------------

# .. envvar:: drupal_user
#
# Name of the system user account for drupal application.
drupal_user: 'drupal'


# .. envvar:: drupal_group
#
# Name of the system group for drupal application.
drupal_group: 'drupal'


# .. envvar:: drupal_shell
#
# Shell configured on drupal account.
drupal_shell: '/bin/bash'


# .. envvar:: drupal_home
#
# Home directory of the drupal application.
drupal_home: '{{
  (ansible_local.nginx.www
  if (ansible_local|d() and ansible_local.nginx|d() and
  ansible_local.nginx.www|d())
  else "/srv/www") + "/" + drupal_user }}'


# .. envvar:: drupal_install_path
#
# Path where drupal application source will be installed, this directory
# should be readable by the webserver.
drupal_install_path: '{{ drupal_home + "/sites/drupal" }}'


# .. envvar:: drupal_files_path
#
# Path where drupal site public files are stored, including caches.
drupal_files_path: '{{ drupal_install_path + "/sites/default/files" }}'


# .. envvar:: drupal_private_files_path
#
# Path where drupal user-content private files are stored.
# This directory should be set outside of the webserver root directory.
drupal_private_files_path: '{{ drupal_home + "/files/drupal" }}'


# --------------------
#   drupal sources
# --------------------

# .. envvar:: drupal_install_repo
#
# URL of the drupal git repository.
drupal_install_repo: 'http://git.drupal.org/project/drupal.git'


# .. envvar:: drupal_install_version
#
# Name of the git branch to install.
drupal_install_version: '7.39'


# .. envvar:: drupal_cron_key
#
# Cron key for http cron calls.
drupal_cron_key: ''


# --------------------------
#   Database configuration
# --------------------------

# .. envvar:: drupal_database_server
#
# FQDN address of the MariaDB database host; it will be configured by
# ``debops.mariadb`` role.
drupal_database_server: '{{ ansible_local.mariadb.server }}'


# .. envvar:: drupal_database_user
#
# MariaDB database user to use by drupal.
drupal_database_user: 'drupal'


# .. envvar:: drupal_database_name
#
# Name of the MariaDB database to use by drupal.
drupal_database_name: 'drupal'


# .. envvar:: drupal_database_password
#
# MariaDB database password to drupal account.
drupal_database_password: "{{
  lookup('password', secret + '/mariadb/' +
  ansible_local.mariadb.delegate_to +
  '/credentials/' + drupal_database_user +
  '/password length=48') }}"


# -----------------------------
#   Application configuration
# -----------------------------

# .. envvar:: delete_drupal_admin_accounts
#
# Names of accounts that will be created in delete_drupal database. It's preferable
# that these accounts correspond to UNIX accounts on the delete_drupal host, see
# ``drupal_home_snmp_conf`` variable.
#
# Passwords will be automatically stored in ``secret/`` directory (see
# ``debops.secret`` role for more details).
delete_drupal_admin_accounts: [ '{{ ansible_ssh_user
                               if ansible_ssh_user != "root"
                               else lookup("env", "USER") }}' ]


# --------------------------------
#   delete_drupal config.php contents
# --------------------------------

# .. envvar:: delete_drupal_configuration_maps
#
# Main list with dictionaries that hold the delete_drupal configuration generated by
# ``config.php`` template. See :ref:`delete_drupal_configuration_maps` for more
# details.
delete_drupal_configuration_maps:
  - '{{ delete_drupal_config_database }}'
  - '{{ delete_drupal_config_authentication }}'
  - '{{ delete_drupal_config_installation }}'
  - '{{ delete_drupal_config_memcached }}'
  - '{{ delete_drupal_config_webui }}'
  - '{{ delete_drupal_config_autodiscovery }}'
  - '{{ delete_drupal_config_snmp }}'
  - '{{ delete_drupal_config_custom }}'


# .. envvar:: delete_drupal_config_database
#
# delete_drupal database configuration.
delete_drupal_config_database:
  comment: 'Database configuration'
  'db_host': '{{ delete_drupal_database_server }}'
  'db_name': '{{ drupal_database_name }}'
  'db_user': '{{ drupal_database_user }}'
  'db_pass': '{{ delete_drupal_database_password }}'


# .. envvar:: delete_drupal_config_authentication
#
# delete_drupal authentication configuration.
delete_drupal_config_authentication:
  comment: 'Authentication configuration'
  'auth_mechanism': 'mysql'


# .. envvar:: delete_drupal_config_installation
#
# delete_drupal installation configuration.
delete_drupal_config_installation:
  comment: 'Application directories, installation'
  'install_dir': '{{ drupal_install_path }}'
  'rrd_dir':     '{{ delete_drupal_rrd_dir }}'
  'log_dir':     '{{ delete_drupal_log_dir }}'
  'update':      '{{ delete_drupal_update }}'


# .. envvar:: delete_drupal_config_memcached
#
# delete_drupal ``memcached`` configuration.
delete_drupal_config_memcached:
  comment: 'Memcached configuration'
  'memcached':
    'enable': '{{ delete_drupal_memcached }}'
    'host':   '{{ delete_drupal_memcached_host }}'
    'port':   '{{ delete_drupal_memcached_port }}'


# .. envvar:: delete_drupal_config_webui
#
# delete_drupal web interface configuration.
delete_drupal_config_webui:
  comment: 'Web interface configuration'
  'site_style':          '{{ delete_drupal_site_style }}'
  'front_page':          '{{ delete_drupal_front_page }}'
  'public_status':       '{{ delete_drupal_public_status }}'
  'show_services':       '{{ delete_drupal_show_services }}'
  'network_map_items':   { array: '{{ delete_drupal_network_map_items }}' }


# .. envvar:: delete_drupal_config_autodiscovery
#
# delete_drupal autodiscovery configuration.
delete_drupal_config_autodiscovery:
  comment: 'Autodiscovery configuration'
  'own_hostname':        '{{ delete_drupal_own_hostname }}'
  'discover_services':   '{{ delete_drupal_discover_services }}'
  'nets':                '{{ delete_drupal_autodiscover_networks }}'
  'ignore_mount_string': '{{ delete_drupal_ignore_mount_string }}'
  'auth_ldap_groups':
    'admin':
      'level': 7


# .. envvar:: delete_drupal_config_snmp
#
# delete_drupal SNMP configuration.
delete_drupal_config_snmp:
  comment: 'SNMP configuration'
  'snmp':
    'version': '{{ delete_drupal_snmp_version }}'
    'community': { array: '{{ delete_drupal_snmp_communities }}' }
    'v3': '{{ delete_drupal_snmp_credentials }}'


# .. envvar:: delete_drupal_config_custom
#
# Custom delete_drupal configuration.
delete_drupal_config_custom: {}

